<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[azureyu]]></title>
  <link href="azureyu.com/book/atom.xml" rel="self"/>
  <link href="azureyu.com/book/"/>
  <updated>2016-04-09T23:59:21+08:00</updated>
  <id>azureyu.com/book/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://www.mweb.im">MWeb</generator>

  
  <entry>
    <title type="html"><![CDATA[iOS Programming]]></title>
    <link href="azureyu.com/book/14602167513069.html"/>
    <updated>2016-04-09T23:45:51+08:00</updated>
    <id>azureyu.com/book/14602167513069.html</id>
    <content type="html"><![CDATA[
<p>在进行iOS编程时，多数情况下是在与Cocoa进行交互。<br/>
Cocoa是一个很庞大的库，它分为了几个小库。</p>

<h2 id="toc_0">Subclassing</h2>

<p>Cocoa会提供给你一些可以直接使用的对象，比如UIButton。有时候，你会想要自定义这些对象。在对其继承之前，最好查一查，可不可以直接进行更改。比如UIButton就可以更改其标题，背景图片等。</p>

<p>但是，不管怎样，你都有更改属性和方法还是不能满足的时候。这种时候，Cocoa会提供给你一些方法可以进行子类化(subclassing)和重载。</p>

<p>比如UIView，你继承UIView之后，可以对drawRect进行重载，绘制自定义视图。</p>

<p>但是，继承是你在和cocoa交互时，极少会使用到的方式。知道什么时候使用继承是需要技巧的，但是更通用的规则是，如果不是确切的知道该继承，你最好不要使用它。</p>

<p>不使用继承的一个重要原因是，大多数自带的Cocoa类使用委托(delegation)来自定义行为(方法)。</p>

<p>(纯粹看理论会没有实际认知，需要编码去理解。<br/>
知识编码却会陷入似懂非懂的状态，需要整合理论去理解。)</p>

<h2 id="toc_1">Categories and Extensions</h2>

<p>OC中Categories指直接在已存在的类上添加方法，Swift中叫作Extensions。</p>

<h3 id="toc_2">Swift中如何使用extension？</h3>

<p>例子，Array<T>，多使用extension加少量的protocol。多个extension，把函数体分为多个部分不不是全部在一起，这样使得代码更容易被理解，同时相关联的函数也聚集在一起。<br/>
eg. Core Graphic</p>

<h3 id="toc_3">你如何使用extension？</h3>

<p>在已存在的对象类型中添加函数。<br/>
而且它使用于Swift三种类型对象，比如enum和struct不能继承却可以extension。<br/>
一次改变，处处改变。</p>

<p>会在不同的头文件中都有categories的声明，但文档之间没有链接，这也许是cocoa框架结构的问题之一吧。</p>

<h2 id="toc_4">Document</h2>

<ul>
<li>Inherits from 继承自何处，不断的向上查看父类，以寻找到你需要的信息。</li>
<li>Conforms to 这怎么翻译，不断的查看其实现的协议(Protocal),以寻找到你需要的信息。</li>
<li>Framework  看该类属于哪个框架，在使用时，需要将框架import你的代码中。</li>
<li>Availability   在什么版本开始可以使用。</li>
<li>Declared in  类被声明在哪一个头文件中。</li>
<li>Related document 相关文档，提高给你有用的信息，比如代码示例。orient your thinking and provide you optionals</li>
<li>Sample code 下一章具体介绍</li>
<li>Body</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TimeLine]]></title>
    <link href="azureyu.com/book/14602167511880.html"/>
    <updated>2016-04-09T23:45:51+08:00</updated>
    <id>azureyu.com/book/14602167511880.html</id>
    <content type="html"><![CDATA[
<p>title: iOS TimeLine<br/>
date: 2015-11-01 17:06:54<br/>
tags: iOS</p>

<hr/>

<p>主要内容:iOS学习时间线</p>

<h1 id="toc_0">Design + Code</h1>

<h2 id="toc_1">09-06 Prototype</h2>

<p>Point:<br/>
1. Prototypeing increase commuction.<br/>
2.  Using <a href="https://github.com/MengTo/Spring">Spring</a> <br/>
3.  Set the view background and set the LogIn dialog&rsquo;s class to the spring class, then in the Inspetor we can use the animation.</p>

<p>使用Spring开启动画之旅。原型示例，无需编码即可使用动画。<br/>
下载Spring，添加到工程中，选择组件，设置为Spring Class，定义动画。</p>

<h2 id="toc_2">09-07 Autolayout 2h</h2>

<p>之前使用AutoLayout的问题，是因为没有限制元素的大小，只给出了元素的位置。<br/>
Mengto 的教材要点清晰，步骤解释详细。<br/>
事件编程，比喻: HTML-&gt;View，JS-&gt;ViewController，但是这里是一对一</p>

<ol>
<li>一般命名规则：<strong>function+type+action</strong></li>
<li>Prototyping Animations With Swift</li>
</ol>

<p>添加动画：</p>

<pre><code>dialogView.animation = &quot;shake&quot;
dialogView.animate()

 // Optionals

var answer: String!
UILabel().text = answer

if let sureAnswer = answer {
    UILabel().text = sureAnswer
}

UILabel().text = answer ?? &quot;&quot;
</code></pre>

<h2 id="toc_3">09-08 Building the UI</h2>

<ol>
<li><p>颜色选择插件<a href="http://wafflesoftware.net/hexpicker/">1</a>，<a href="https://bjango.com/mac/skalacolor/">2</a></p></li>
<li><p>clip subview属性，表示对于控件，之外部分不会显示。有些像蒙版。</p></li>
<li><p>目标：将原型转化为真的组件。添加组件、进行布局、设置动画等。<br/>
view-&gt;viewcontroller class</p></li>
<li><p>大体过程：添加view，设置背景色或图片；添加button，设置button的图标或颜色，字体大小；添加各组件动态效果，设置为可设计的class，再更改属性。最后布局。添加限制：位置限制，大小限制。</p>

<blockquote>
<p>这是个体力活，有没有更好的布局方式?</p>
</blockquote></li>
<li><p>问题: 转场动画总是不对，虚化也没用正常的实现！到底是哪里的问题！明明按照教程做的啊。</p>

<p>解决：结果还是因为自己和教程不一样，没有去掉view的颜色 -。-</p></li>
<li><p>两个class之间沟通，需要用到delegate。<br/>
&lt;!&ndash;more&ndash;&gt;</p></li>
</ol>

<h2 id="toc_4">09-09 TableView, Segue 2.5h</h2>

<p>添加tableview，添加nav，设置颜色，添加bar-item，设置segue，直接从controller那里拖去，设置segue的indentifier，这样可以通过编码进行调用、控制。<br/>
<strong>别忘记加entry point</strong>。</p>

<p>设置segue的显示方式</p>

<ol>
<li>添加tableviewcontroller，设置class，添加action，转向页面（performSegueWithIdentifier）。</li>
<li>设置Cell，indentifier，Row height: custom。添加UIimageview，设置大小和位置。同理添加Lable等。去掉constrain to margin。添加其余组件。看来要提前设计好大小啊。</li>
<li>将之前三个页面的unwind去掉，然后设置class，在代码中添加action。手动时，调用，self.dismissViewControllerAnimated 进行返回。也可以设置返回时的动画。</li>
<li><p>问题，cell的高度没有改变。<br/>
解决办法：</p>

<ol>
<li>看官方文档<a href="https://developer.apple.com/library/prerelease/ios/documentation/UIKit/Reference/UITableView_Class/index.html#//apple_ref/doc/uid/TP40006943">UITableView Class Referance</a></li>
<li><p>设置cell中row height高度为100，在viewdidload中添加代码:</p>

<pre><code>tableView.estimatedRowHeight = 100
tableView.rowHeight = UITableViewAutomaticDimension
</code></pre></li>
</ol></li>
</ol>

<p>两个半小时有没有了 -。-</p>

<h2 id="toc_5">09-10 TableCell 1.5h</h2>

<ol>
<li>添加cell的class，添加IBAction等，添加动画效果，在tableviewcontroller中添加数据，关联view。</li>
<li>修改bar state(状态栏)</li>
</ol>

<p>一个半小时又木有了-。-</p>

<h2 id="toc_6">09-11 Creating a delegate</h2>

<p>delegate：在两个类之间进行通信。接口interface</p>

<blockquote>
<p>We need a Delegate for two Classes to communicate with each other.</p>
</blockquote>

<ol>
<li>creat a protcol</li>
<li>delare delgate</li>
<li><p>add and impl&hellip; function </p></li>
<li><p>问题:</p>

<ol>
<li>cell.delegate = self </li>
<li>sender是什么</li>
</ol></li>
<li><p>高度解决办法，在storycell设置100，custom。在viewdidload中加入代码。<br/>
tableView.estimatedRowHeight = 100<br/>
 tableView.rowHeight = UITableViewAutomaticDimension</p></li>
</ol>

<h2 id="toc_7">09-11~09-12 Applying Static Data from API</h2>

<ol>
<li>新建文件data存储数据，类型为字典</li>
<li>JSON数据，转化之后写入Data中</li>
<li>进行赋值，因为比较多，所以单独写为一个函数</li>
</ol>

<p>设计，原型，设计转为实物，转场，数据</p>

<h2 id="toc_8">09-13 Opening Links 2h</h2>

<ol>
<li>昨天高度不对的问题，是因为没有设置好约束，<strong>想要实现自动行高，在顶和低都要有元素的约束</strong>。</li>
<li>在learn iOS中open link，写一个函数，传入url: String 再在safari中打开，UIApplication.share&hellip;等</li>
<li>同理，在点击tablecell时，通过segue把url传到webController那去。需要传入数据，获取indexPath.row，接受数据，url。同样转换之后打开。不过这次是通过，加入web的delegate，loadrequest。设置进度条，只给出了代码实现方式，没有给出解释。</li>
<li>一些细节，转场，statusbar的设置。</li>
</ol>

<p>今天没有什么问题。</p>

<h2 id="toc_9">09-14 Login keyboard 1h</h2>

<p>设置keyboard在输入时，自动向上跳一定距离。添加库TPKeboardAvoiding，添加scoller view，把要输入的部分都加入其中，设置类为TPK&hellip;S&hellip;。<br/>
设置动画，添加delgate，设置图片和动画。<br/>
没什么问题。</p>

<h2 id="toc_10">09-15 Data</h2>

<p>终于涉及到专业知识了&hellip;<br/>
感觉这应用核心部分不多，但包装很好。</p>

<ul>
<li> CocoaPods，是什么？如何使用？</li>
<li>Alamofire是什么？怎么用？</li>
<li>API是什么？怎么用？</li>
<li>这些技术的核心思想是什么？由什么而来？</li>
</ul>

<p>感觉应用层就是变化多端，没有低层来得那么实在。一个要创意（难捉摸）些，一个要&hellip;恩&hellip;聪明(枯燥)。</p>

<p>这一节的知识，讲得太过笼统。没有解释。估计作者自己也不太能解释。是一门适合程序员入门设计的书，可真不像是一门设计人员入门编程的书。</p>

<h2 id="toc_11">9-16 Alamofire</h2>

<ol>
<li>添加Alamofire的库，文档</li>
<li>添加数据类型</li>
<li>进行API的调用，将内容改为动态数据

<ul>
<li>Table&hellip;定义存储stories为JSON类型，添加载入数据方法 </li>
<li>页面加载，获取data，下拉刷新，获取data</li>
<li>cell放回内容时，将每个cell赋值</li>
</ul></li>
<li>处理之前的数据类型</li>
<li>添加下拉刷新</li>
<li>添加页面刷新</li>
</ol>

<p>这下要自己折腾学新东西了。<br/>
这里使用的数据结构式JSON，采用的网络协议是Alamofire。</p>

<h2 id="toc_12">09-17 API</h2>

<ol>
<li>API是什么？怎么用？
API: Application Programming Interface 应用程序接口</li>
<li><p>什么是 JSON ？</p>

<blockquote>
<ul>
<li>JSON 指的是 JavaScript 对象表示法（JavaScript Object Notation）</li>
</ul>
</blockquote>

<ul>
<li>JSON 是轻量级的文本数据交换格式</li>
<li>JSON 独立于语言 *</li>
<li>JSON 具有自我描述性，更易理解</li>
<li>JSON 使用 JavaScript 语法来描述数据对象，但是 JSON 仍然独立于语言和平台。JSON 解析器和 JSON 库支持许多不同的编程语言。</li>
</ul></li>
<li><p>JSON 语法规则</p>

<blockquote>
<p>JSON 语法是 JavaScript 对象表示法语法的子集。</p>
</blockquote>

<ul>
<li>数据在名称/值对中</li>
<li>数据由逗号分隔</li>
<li>花括号保存对象</li>
<li>方括号保存数组</li>
</ul></li>
</ol>

<h1 id="toc_13">探索阶段</h1>

<h2 id="toc_14">09-20 复习</h2>

<p>类型转换键盘dismiss firstRespond&hellip;</p>

<ol>
<li>点击go进行登录?如何获取键盘事件响应？添加UITextField的delegate，实现方法textFieldShouldReturn就可以了。</li>
<li>各种UI的使用方法。</li>
<li>两个alert，如何只响应其中一个的事件?</li>
<li>如何获取另一个函数中的值？难道不是直接调用函数？</li>
</ol>

<p><strong>慢慢来。</strong></p>

<h2 id="toc_15">09-21看开发者博客</h2>

<p>想自己设计个记录的app，设计UI。<br/>
感觉最近很停滞，没什么进展。<br/>
学以致用,自己动手才发现其实不简单。</p>

<h2 id="toc_16">09-22 学开发究竟是在什么呢？</h2>

<p>How to do something?<br/>
用技术去实现功能。<br/>
如何使用别人造好的轮子呢？<br/>
明确一些设计的概念，比如协议、target之类的。<br/>
框架，就是给你材料，你去使用，去构建出自己的应用程序。<br/>
iOS 的API 分为四层。<br/>
UIKit，如何理解？类继承，家族。举例子，几何类。<br/>
需要用到数据的控件，实现delegate和dataSource。<br/>
表视图设计模式：分页，下拉刷新。<br/>
导航：平铺、标签、树形？</p>

<blockquote>
<p>默认情况下,模态视图是从屏幕下方滑出来的。当完成的时候需要关闭这个模态视图,如果不关闭,就不能 做别的事情,这就是“模态”的含义,它具有必须响应处理的意思。</p>
</blockquote>

<p>视图之间传输数据？委托？广播？MVC？</p>

<h1 id="toc_17">Project-based study</h1>

<h2 id="toc_18">09-23 UnitConverter</h2>

<p>温度转化，学习MVC模式。</p>

<h2 id="toc_19">09-24 UnitConverter</h2>

<p>完成了温度转化APP，对MVC的M有了更深的理解。</p>

<h2 id="toc_20">09-25 EasyBrowser</h2>

<h3 id="toc_21">Web:</h3>

<pre><code>    if let url = NSURL(string: textField1.text){
        webView1.loadRequest(NSURLRequest(URL:url))
    }
</code></pre>

<ol>
<li>UIApplication.sharedApplication().openURL(NSURL(string: textField1.text)!)</li>
<li>webView1.loadRequest(NSURLRequest(URL:NSURL(string: textField1.text)!))</li>
</ol>

<h3 id="toc_22">UIApplication</h3>

<p>通过UIApplication调用iOS其他应用功能</p>

<h3 id="toc_23">Optional Binding:</h3>

<blockquote>
<p>You use optional binding to find out whether an optional contains a value, and if so, to make that value available as a temporary constant or variable. </p>
</blockquote>

<pre><code>    if let constantName = someOptional {
        statements
    }
</code></pre>

<p>看不同人写的代码，才知道什么是写得好的代码。<br/>
。<br/>
明确知道它有值的可选型，称为implicitly unwrapped optionals，绝对可拆可选型，在之后加上!，方便之后使用(因为可以不再进行是否有值的判断)。</p>

<pre><code>let possibleString: String? = &quot;An optional string.&quot;
let forcedString: String = possibleString! // requires an exclamation mark

let assumedString: String! = &quot;An implicitly unwrapped optional string.&quot;
let implicitString: String = assumedString // no need for an exclamation mark
</code></pre>

<p>不太理解为什么要这样做，直接定义为对应的类型不就好了吗？</p>

<h2 id="toc_24">09-26 Found</h2>

<ol>
<li><p>调用系统地图App</p>

<p>NSURL(string: &ldquo;<a href="http://maps.apple.com/?q=Yosemite%22">http://maps.apple.com/?q=Yosemite&rdquo;</a>)<br/>
q代表query，<a href="https://developer.apple.com/library/ios/featuredarticles/iPhoneURLScheme_Reference/MapLinks/MapLinks.html#//apple_ref/doc/uid/TP40007899-CH5-SW1">详细用法</a></p></li>
<li><p>在App中<a href="https://developer.apple.com/maps/">使用Map</a></p></li>
<li><p><a href="https://developer.apple.com/library/ios/documentation/MapKit/Reference/MKMapView_Class/index.html#//apple_ref/occ/instp/MKMapView/delegate">MapView使用</a></p></li>
<li><p>添加方法：</p>

<blockquote>
<p>You can add a map view to your app programmatically or using Interface Builder:<br/>
1. To add a map using Interface Builder, drag a Map view object to the appropriate view or window.<br/>
2. To add a map programmatically, create an instance of the MKMapView class, initialize it using the initWithFrame: method, and then add it as a subview to your window or view hierarchy.</p>
</blockquote></li>
<li><p>在地图上显示用户位置，使用用户位置之前，必须要取得用户授权。coreLocation。<br/>
属性可以通过IB配置，或者代码配置。</p>

<blockquote>
<p>Improve the codebase by incorporating a CLLocationManagerDelegate, and use appropriate delegate methods to control the app behavior to squelch the console warning.</p>
</blockquote>

<ol>
<li>问题，delegate用哪一个函数，怎么改？</li>
</ol></li>
</ol>

<h2 id="toc_25">09-27 中秋， 生日聚会</h2>

<h2 id="toc_26">09-28 Found MKMapViewDelegate</h2>

<ol>
<li>打开之后，显示到到用户位置，调用对应API。</li>
<li><p>如何改变Zoom level? 使用mapview delegate viewcontroller，viewcontroller添加protocal MKMapViewDelegate，实现 didUpdateUserLocation方法，在其中setRegion。</p>

<blockquote>
<p>PS: 好棒的PPT</p>
</blockquote></li>
<li><p>What is delegate? </p>

<blockquote>
<p>Delegating to other objects to handle specific behaveor.</p>
</blockquote>

<p>Think about the really world delegate. Then, move to the delegate pattern. use the protocal to imply some functions.</p></li>
<li><p>Why we use delegate?</p></li>
<li><p>What is protocal? </p>

<blockquote>
<p>Interfaces that define expected behavior.</p>
</blockquote></li>
</ol>

<h2 id="toc_27">09-29 MKAnnotation</h2>

<ol>
<li>如何在地图上进行标注?
查看API，MKAnnotation，提供接口，进行实现。
熟悉之后速度就快了。查看官方API。</li>
<li>如何移动pin呢？</li>
<li><p>添加之后的问题:</p>

<p>2015-09-29 18:19:48.308 Found[1622:431363] <br/>
More than 127 names on road (320ÂõΩÈÅì). <br/>
Data is probably bad. Please open a radar</p></li>
</ol>

<h1 id="toc_28">节拍器APP</h1>

<h2 id="toc_29">10-08</h2>

<p>完成节拍器的设计和切图，制作出了基本原型。</p>

<h2 id="toc_30">10~20</h2>

<p>之前完成了编码，但是存在界面卡顿问题，使得用户体验不流畅。<br/>
所以开始学习Core Graphic直接在系统中进行绘图，那么久不会存在这样的问题。<br/>
1. Core Graphic<br/>
    - Line <br/>
    - Arc</p>

<h2 id="toc_31">10-21</h2>

<p>学了教程2的一半，就开始直接用了。修改metre和pushBtn，不再是图片显示，改为用 Core Graphic直接画。<br/>
还是觉得个人开发进度好慢，而且很多地方不懂啊。</p>

<h2 id="toc_32">10-29</h2>

<p>十月份匆匆忙忙的就过去了，这个月有些停滞。为什么呢？视乎方向不太明确。还是自己太心急，就开始做自己的APP了？一边学新知识，一边实践把。<br/>
决定开始刷<a href="http://www.raywenderlich.com/category/ios">Raywenderlish</a>的教程。</p>

<h2 id="toc_33">10-30</h2>

<p>CGD</p>

<h2 id="toc_34">11-01</h2>

<p>开启新篇章。今天学习如何制作全屏相机。</p>

<h2 id="toc_35">11-02 2h</h2>

<p>NoiseMaker Lesson5-7<br/>
一步一步的进行代码优化。<br/>
什么是真正的能力？能用框架，看别人写的代码。<br/>
那么，它是如何知道的呢？<br/>
有哪些好的实践？</p>

<h2 id="toc_36">11-03 2h</h2>

<p>写LiveHouse的代码<br/>
学习使用相机，添加手势操作图像</p>

<h2 id="toc_37">11-05 3h</h2>

<p>寻找思路旋转3D图形和合成图形.<br/>
Layer</p>

<h2 id="toc_38">11-06 1h</h2>

<p>iOS-Design_with_animation</p>

<h2 id="toc_39">11-07</h2>

<p>完成节拍器，节拍流畅重复！！<br/>
思路：把主界面传来的参数传给speaker全局，再写播放函数，使用递归的方式进行调用，多加一个isFirst与power一起进行判断。</p>

<h2 id="toc_40">11-08</h2>

<p>完成虚拟家具，手势顺滑操作，合成图像，隐藏状态栏。<br/>
- 手势：TouchView<br/>
- 合成图像：思路，将两个UIImageView加在UICombineVIew上，然后将CombineView转化为image，再传给预览。</p>

<pre><code>extension UIView {

func toImage() -&gt; UIImage {
    let imageSize = self.frame.size
    UIGraphicsBeginImageContextWithOptions(imageSize, false, UIScreen.mainScreen().scale)
    UIGraphicsBeginImageContext(imageSize);
    self.layer.renderInContext(UIGraphicsGetCurrentContext()!)
    let image = UIGraphicsGetImageFromCurrentImageContext()
    UIGraphicsEndImageContext()
    return image
  }
}
</code></pre>

<ul>
<li><p>status bar<br/>
info中添加View controller-based status bar appearance，改为YES。再在viewController调用：</p>

<pre><code>override func prefersStatusBarHidden() -&gt; Bool {
return true
}
</code></pre></li>
</ul>

<p><a href="http://www.bubuko.com/infodetail-1136596.html">适配iOS9</a><br/>
<a href="http://blog.csdn.net/majiakun1/article/details/49072761">全2</a></p>

<h2 id="toc_41">11-17</h2>

<p>都没有意识到停滞了那么久。出去玩了几天。</p>

<h2 id="toc_42">中间有练习，但没有记录</h2>

<p>11-20 4h</p>

<p>11-22 2h30 没进展，还是不知道body如何传</p>

<h2 id="toc_43">如何调用API？</h2>

<ol>
<li>Animolfire，SwiftyJSON是什么，怎么使用？</li>
<li><p>如何发出网络请求？</p>

<ul>
<li>URL</li>
<li>tpye</li>
<li>parameters</li>
<li>headers</li>
<li><p>body</p>

<h3 id="toc_44">parameters、header写法:</h3>

<pre><code>let headers = [
        &quot;Ocp-Apim-Subscription-Key&quot;: &quot;6e231ef52099425b90918984897ce508&quot;,
        &quot;Content-Type&quot;: &quot;application/octet-stream&quot;
]   
</code></pre>

<h3 id="toc_45">另一种:</h3>

<p>mutableURLRequest.setValue(postLength as String,forHTTPHeaderField:&ldquo;Content-Length&rdquo;)</p>

<h3 id="toc_46">body写法:</h3>

<p>mutableURLRequest.HTTPBody = imgData</p>

<h3 id="toc_47">发出HTTP请求:</h3>

<p>Alamofire.request(.POST, mutableURLRequest, parameters: parameters, headers:headers).responseJSON {response in<br/>
    debugPrint(response)<br/>
    //(_, _, JSON) in<br/>
    //print(JSON)<br/>
}</p></li>
</ul></li>
<li><p>上载图片，获得图片数据分析之后的数据？</p></li>
<li><p>图片转二进制流</p>

<pre><code>NSData* imgData = UIImageJPEGRepresentation(image, 1);
// Convert from JSON to nsdata
func jsonToNSData(json: AnyObject) -&gt; NSData?{
    do {
        return try NSJSONSerialization.dataWithJSONObject(json, options: NSJSONWritingOptions.PrettyPrinted)
    } catch let myJSONError {
        print(myJSONError)
    }
    return nil;
}
</code></pre></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Code]]></title>
    <link href="azureyu.com/book/14602167511282.html"/>
    <updated>2016-04-09T23:45:51+08:00</updated>
    <id>azureyu.com/book/14602167511282.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">swift 手势识别</h2>

<p><strong>This is adapted from internet</strong></p>

<pre><code>import UIKit

class ViewController: UIViewController, UIActionSheetDelegate {

@IBOutlet var im: UIImageView!
var lastScaleFactor : CGFloat! = 1  //放大、缩小
var netRotation : CGFloat = 1;//旋转
var netTranslation : CGPoint!//平移
var images : NSArray = [&quot;meinv1.jpg&quot;,&quot;mv2.jpg&quot;,&quot;mv3.jpg&quot;,&quot;mv4.jpg&quot;,&quot;mv5.jpg&quot;,&quot;mv6.jpg&quot;]// 图片数组
var imageIndex : Int = 0 //数组下标


required init(coder aDecoder: NSCoder) {
    super.init(coder: aDecoder)
    netTranslation = CGPoint(x: 0, y: 0)
}

override func viewDidLoad() {
    super.viewDidLoad()


    var tapGesture = UITapGestureRecognizer(target: self, action: &quot;handleTapGesture:&quot;)
    //设置手势点击数,双击：点2下
    tapGesture.numberOfTapsRequired = 2
    self.view.addGestureRecognizer(tapGesture)

    //手势为捏的姿势:按住option按钮配合鼠标来做这个动作在虚拟器上
    var pinchGesture = UIPinchGestureRecognizer(target: self, action: &quot;handlePinchGesture:&quot;)
    self.view.addGestureRecognizer(pinchGesture)

    //旋转手势:按住option按钮配合鼠标来做这个动作在虚拟器上
    var rotateGesture = UIRotationGestureRecognizer(target: self, action: &quot;handleRotateGesture:&quot;)
    self.view.addGestureRecognizer(rotateGesture)

    //拖手势
    var panGesture = UIPanGestureRecognizer(target: self, action: &quot;handlePanGesture:&quot;)
// self.view.addGestureRecognizer(panGesture)

    //划动手势
    //右划
    var swipeGesture = UISwipeGestureRecognizer(target: self, action: &quot;handleSwipeGesture:&quot;)
    self.view.addGestureRecognizer(swipeGesture)
    //左划
    var swipeLeftGesture = UISwipeGestureRecognizer(target: self, action: &quot;handleSwipeGesture:&quot;)
    swipeLeftGesture.direction = UISwipeGestureRecognizerDirection.Left //不设置是右
    self.view.addGestureRecognizer(swipeLeftGesture)

    //长按手势
    var longpressGesutre = UILongPressGestureRecognizer(target: self, action: &quot;handleLongpressGesture:&quot;)
    //长按时间为1秒
    longpressGesutre.minimumPressDuration = 1
    //允许15秒运动
    longpressGesutre.allowableMovement = 15
    //所需触摸1次
    longpressGesutre.numberOfTouchesRequired = 1
    self.view.addGestureRecognizer(longpressGesutre)
}

override func didReceiveMemoryWarning() {
    super.didReceiveMemoryWarning()
    // Dispose of any resources that can be recreated.
}

//双击屏幕时会调用此方法,放大和缩小图片
func handleTapGesture(sender: UITapGestureRecognizer){
    //判断imageView的内容模式是否是UIViewContentModeScaleAspectFit,该模式是原比例，按照图片原时比例显示大小 
    if im.contentMode == UIViewContentMode.ScaleAspectFit{
        //把imageView模式改成UIViewContentModeCenter，按照图片原先的大小显示中心的一部分在imageView
       im.contentMode = UIViewContentMode.Center
    }else{
        im.contentMode = UIViewContentMode.ScaleAspectFit
    }
}

//捏的手势，使图片放大和缩小，捏的动作是一个连续的动作
func handlePinchGesture(sender: UIPinchGestureRecognizer){
    var factor = sender.scale
    if factor &gt; 1{
        //图片放大
        im.transform = CGAffineTransformMakeScale(lastScaleFactor+factor-1, lastScaleFactor+factor-1)
    }else{
        //缩小
        im.transform = CGAffineTransformMakeScale(lastScaleFactor*factor, lastScaleFactor*factor)
    }
    //状态是否结束，如果结束保存数据
    if sender.state == UIGestureRecognizerState.Ended{
        if factor &gt; 1{
            lastScaleFactor = lastScaleFactor + factor - 1
        }else{
            lastScaleFactor = lastScaleFactor * factor
        }
    }
}

//旋转手势
func handleRotateGesture(sender: UIRotationGestureRecognizer){
    //浮点类型，得到sender的旋转度数 
    var rotation : CGFloat = sender.rotation
    //旋转角度CGAffineTransformMakeRotation,改变图像角度
    im.transform = CGAffineTransformMakeRotation(rotation+netRotation)
    //状态结束，保存数据
    if sender.state == UIGestureRecognizerState.Ended{
        netRotation += rotation
    }
}
//拖手势
func handlePanGesture(sender: UIPanGestureRecognizer){
    //得到拖的过程中的xy坐标
    var translation : CGPoint = sender.translationInView(im)
    //平移图片CGAffineTransformMakeTranslation
    im.transform = CGAffineTransformMakeTranslation(netTranslation.x+translation.x, netTranslation.y+translation.y)
    if sender.state == UIGestureRecognizerState.Ended{
        netTranslation.x += translation.x
        netTranslation.y += translation.y
    }
}
//划动手势
func handleSwipeGesture(sender: UISwipeGestureRecognizer){
    //划动的方向
    var direction = sender.direction
    //判断是上下左右
    switch (direction){
    case UISwipeGestureRecognizerDirection.Left:
        println(&quot;Left&quot;)
        imageIndex++;//下标++
        break
    case UISwipeGestureRecognizerDirection.Right:
        println(&quot;Right&quot;)
        imageIndex--;//下标--
        break
    case UISwipeGestureRecognizerDirection.Up:
        println(&quot;Up&quot;)
        break
    case UISwipeGestureRecognizerDirection.Down:
        println(&quot;Down&quot;)
        break
    default:
        break;
    }
    //得到不越界不&lt;0的下标
    imageIndex = imageIndex &lt; 0 ? images.count-1:imageIndex%images.count
    //imageView显示图片
    im.image = UIImage(named: images[imageIndex] as String)
}

//长按手势
func handleLongpressGesture(sender : UILongPressGestureRecognizer){

    if sender.state == UIGestureRecognizerState.Began{
        //创建警告
        var actionSheet = UIActionSheet(title: &quot;Image options&quot;, delegate: self, cancelButtonTitle: &quot;cancel&quot;, destructiveButtonTitle: &quot;ok&quot;, otherButtonTitles: &quot;other&quot;)
        actionSheet.showInView(self.view)
    }
}
}
</code></pre>

<h2 id="toc_1">Select Image</h2>

<p>detail:imageview设置aspect fill属性后，图像可能会“撑破”图像视图，显得很宽很大，选中clip subviews属性就没事了</p>

<pre><code>// MARK: select Image

@IBAction func selectImage(sender: UITapGestureRecognizer){
    // Hide the keyboard.
    contentTextField.resignFirstResponder()
    let imagePickerController = UIImagePickerController()

    let chooseAWay:UIAlertController = UIAlertController(title: &quot;Choose a way&quot;, message: &quot;&quot;, preferredStyle: UIAlertControllerStyle.ActionSheet)

    // Choose from photo library
    let photoLib = UIAlertAction(title: &quot;Choose from photo library&quot;, style: UIAlertActionStyle.Default){
        (action: UIAlertAction!) -&gt; Void in

        imagePickerController.sourceType = .PhotoLibrary
        imagePickerController.delegate = self
        self.presentViewController(imagePickerController, animated: true, completion: nil)
    }
    // Take a picture
    let takePhoto = UIAlertAction(title: &quot;Take a picture&quot;, style: UIAlertActionStyle.Default){
        (action: UIAlertAction!) -&gt; Void in

        if self.isCameraAvailable() &amp;&amp; self.doesCameraSupportTakingPhotos(){
            imagePickerController.sourceType = .Camera
            imagePickerController.allowsEditing = false
            imagePickerController.mediaTypes = [kUTTypeImage as NSString as String]
            imagePickerController.delegate = self
            self.modalPresentationStyle = UIModalPresentationStyle.OverCurrentContext
            self.presentViewController(imagePickerController, animated: true, completion: nil)
        }else{
            print(&quot;Camera is not available&quot;)
            let CameraIsnotAva = UIAlertController(title: &quot;Check your camera&quot;, message: &quot;Camera is not available&quot;, preferredStyle: UIAlertControllerStyle.Alert)

            self.presentViewController(CameraIsnotAva, animated: true, completion: nil)

        }
    }
    let cancel = UIAlertAction(title: &quot;Cancel&quot;, style: UIAlertActionStyle.Destructive, handler: nil)
    chooseAWay.addAction(takePhoto)
    chooseAWay.addAction(photoLib)
    chooseAWay.addAction(cancel)

    self.presentViewController(chooseAWay, animated: true, completion: nil)


}
// MARK: Check camera
func isCameraAvailable() -&gt; Bool{
    return UIImagePickerController.isSourceTypeAvailable(.Camera)
}
func cameraSupportsMedia(mediaType: String,
        sourceType: UIImagePickerControllerSourceType) -&gt; Bool{
        let availableMediaTypes = UIImagePickerController.availableMediaTypesForSourceType(sourceType)!
        as [String]
        for type in availableMediaTypes{ if type == mediaType{
        return true }
        }
        return false }
func doesCameraSupportShootingVideos() -&gt; Bool{
        return cameraSupportsMedia(kUTTypeMovie as NSString as String, sourceType: .Camera)
}
func doesCameraSupportTakingPhotos() -&gt; Bool{
        return cameraSupportsMedia(kUTTypeImage as NSString as String, sourceType: .Camera)
}
</code></pre>

<h2 id="toc_2">循环显示节拍变化</h2>

<p>如何实现呢？移动之后改变？</p>

<p>添加变量，用于判断当前移动到第几块来了。讲其颜色进行改变。</p>

<p>每次改变都进行重新绘制，将内部每格进行判断。</p>

<pre><code>    // 内部每格
    for i in 0..&lt;numMetre{
        var everypath = UIBezierPath(rect: CGRect(x: columnXPoint(i), y: border, width: eryWidth, height: height))
        // 边框颜色
        BlockBdrColor.setStroke()
        everypath.stroke()
        // 填充颜色
        BlockColor.setFill()
        everypath.fill()
        // 当前
        if i == numCurrent{
            everypath = UIBezierPath(rect: CGRect(x: columnXPoint(i), y: border, width: eryWidth, height: height))
            BlockColorFill.setFill()
            everypath.fill()
        }
    }
</code></pre>

<p>进行更新显示，是在NStimer中，因为每次变化都要更新。将metre视图对象传给playLoop，</p>

<pre><code> // TODO:计算时间间隔
  timer = NSTimer.scheduledTimerWithTimeInterval(dur, 
  target: self, selector: &quot;play:&quot;, 
  userInfo: metre, repeats: true)
</code></pre>

<p>因为要对其进行改变，再将其传给下一个函数play。不断循环就是，判断达到是否达到总数，达到就又恢复为0。</p>

<pre><code>    // 传过来啦~~可是这样好麻烦，倒转了两次
    let metre = timer.userInfo as! MetreView
    print(&quot;numCurrent:\(metre.numCurrent)&quot;)
    print(&quot;Metre Num:\(metre.numMetre-1)&quot;)
    // 循环
    if metre.numCurrent &gt;= metre.numMetre-1 {
        metre.numCurrent = 0
    }else{
        metre.numCurrent++
    }
    metre.setNeedsDisplay()
</code></pre>

<p>修改之前需要调用play的地方。</p>

<h2 id="toc_3">AVAudio</h2>

<h3 id="toc_4">when to use what</h3>

<p>探索框架，寻找使用什么去实现。</p>

<h3 id="toc_5">AVAudioPlayer</h3>

<ol>
<li>添加框架，import AVFoundation</li>
<li>var player:AVAudioPlayer?</li>
<li>let audioPath = NSString(string: NSBundle.mainBundle().pathForResource(&ldquo;strong&rdquo;, ofType: &ldquo;wav&rdquo;)!)</li>
<li><p>play</p>

<pre><code>do{
// TODO:播放
    player = try AVAudioPlayer(contentsOfURL: NSURL(string: audioPath as String)!)
    player!.play()
}catch{
    print(&quot;Something goes wrong!&quot;)
}     
</code></pre></li>
</ol>

<p>Attempting to load the view of a view controller while it is deallocating is not allowed and may result in undefined behavior</p>

<h2 id="toc_6">最后要呈现出视图控制器，否则报错</h2>

<pre><code>error:Attempting to load the view of a view controller while it is deallocating is not allowed and may result in undefined behavior  
        self.presentViewController(alertcontroller, animated: true, completion: nil)  


let noFace:UIAlertController = UIAlertController(title: &quot;WOW&quot;, message: &quot;I can&#39;t see you clearly, Could you show me another face?&quot;, preferredStyle: UIAlertControllerStyle.Alert)
            let okAction = UIAlertAction(title: &quot;OK&quot;, style: UIAlertActionStyle.Default, handler: nil)
            noFace.addAction(okAction)
            self.presentViewController(noFace, animated: true, completion: nil)
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Design]]></title>
    <link href="azureyu.com/book/14602167511150.html"/>
    <updated>2016-04-09T23:45:51+08:00</updated>
    <id>azureyu.com/book/14602167511150.html</id>
    <content type="html"><![CDATA[
<h1 id="toc_0">Motion Design</h1>

<p>设计靠形式来体现内容的感觉。</p>

<p>层次 visual foucs</p>

<ol>
<li>Transition, Focus &amp; Delight</li>
<li>Position, Opacity &amp; Scale

<ul>
<li>Position,</li>
<li>Opacity，浅化，逐渐淡出人们的视野<br/></li>
</ul></li>
<li>Use the three properties. Break the design down.</li>
<li>Color, Rotation &amp; 3D(perspective value -&gt;  the amount of warping)</li>
</ol>

<blockquote>
<p>Slight rotation animations can add a really neat element of interest to an otherwise mundane piece of motion, especially when coupled with spring animation curves which will be discussed later in this guide.(?)</p>
</blockquote>

<h2 id="toc_1">Think first</h2>

<p>why you use this animation?</p>

<ul>
<li>What are the initial properties of the item?</li>
<li>What are the final properties of the item?</li>
<li>How long should the animation take?</li>
<li>What&rsquo;s happening while this item is animating?</li>
<li>What will happen once this item is done animating?</li>
</ul>

<h2 id="toc_2">Code it</h2>

<h3 id="toc_3">Apple CALayer</h3>

<h3 id="toc_4">Framwork</h3>

<h1 id="toc_5">Design with animation</h1>

<h2 id="toc_6">What is animation?</h2>

<h2 id="toc_7">Why? When?</h2>

<ol>
<li>Direct people&rsquo;s attention. Something is changed.</li>
<li>Where they are and where they go</li>
<li>Connect people&rsquo;s behavior, fell they are in control. eg. note center
## How do we try animals?
When to use which animation?
How it feels?</li>
<li>Make prototype and get their feedback.</li>
<li>Show</li>
<li>Learn</li>
</ol>

<h2 id="toc_8">Example: toast APP.</h2>

<h3 id="toc_9">Prototyping Animation.</h3>

<ol>
<li>Tool: Keynote</li>
<li>Why? What&rsquo;s your goal? What do you want to tell your coustomer?

<ul>
<li>Email</li>
<li>add your favorite toast
### Interactive Prototype</li>
</ul></li>
<li>fell it at hands</li>
<li>let people try it</li>
<li>make changes</li>
</ol>

<p>Peoblem<br/>
Start Change Compete</p>

<blockquote>
<p>Use animation to add character to your app or game.</p>
</blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning iOS UI Development]]></title>
    <link href="azureyu.com/book/14599279229971.html"/>
    <updated>2016-04-06T15:32:03+08:00</updated>
    <id>azureyu.com/book/14599279229971.html</id>
    <content type="html"><![CDATA[
<h1 id="toc_0">Chapter 1. UI Foundamentals</h1>

<h2 id="toc_1">Windows</h2>

<p>window is an instance of UIWindow. It&rsquo;s the root class of UI&rsquo;s hierarchy. One of the function of the  window is to deliver touches to the underling views.</p>

<p>window好比是画板，view好比是画纸。</p>

<pre><code> -- widow
 --- rootViewController(view controller)
</code></pre>

<h3 id="toc_2">The content of the window</h3>

<p>@UIApplication从info.plist中找到信息，初始化viewcontroller；App delegate中有window属性，设置之前初始化的view controller为其rootViewController。最后，执行完applicationDidFinishLaunching:withOption之后，会调用makeKeyAndVisible将界面从rootViewController中展示出来。（中文混杂英文描述好生涩）</p>

<ol>
<li>将某个view controller设置为rootViewController，window就会显示该view controller的view。</li>
<li>@UIApplicationMain
&gt; The @UIApplicationMain attribute in the AppDelegate.swift file is responsible for the launch of the entire application process. It marks an entry point for the application launch, reading the Storyboard&rsquo;s information from the info.plist file and instantiating the initial view controller</li>
<li>window property in the AppDelegate. 
&gt;This property will be a handy reference to the main window for the entire life cycle of the application.</li>
<li><p>代码实现：</p>

<pre><code>func application(application: UIApplication,
didFinishLaunchingWithOptions
launchOptions: [NSObject: AnyObject]?) -&gt; Bool {
// Instantiate a window with the same size of the screen    
window = UIWindow(frame: UIScreen.mainScreen().bounds)
// Instantiate a view controller with the Main storyboard
let storyboard = UIStoryboard(name: &quot;Main&quot;, bundle: nil)
let viewController = storyboard.instantiateViewControllerWithIdentifier(&quot;viewController2&quot;) as! ViewController
// Setup and present the window
window?.rootViewController = viewController
window?.makeKeyAndVisible()
return true
}
</code></pre></li>
</ol>

<h2 id="toc_3">Working with views</h2>

<p>UIView is the basic class for other UI element.</p>

<blockquote>
<p>UIWindow is also the subclass of the UIVIew.</p>
</blockquote>

<h3 id="toc_4">define the view&rsquo;s geometry</h3>

<p>(0,0)<br/>
&mdash;&mdash;&mdash;&mdash;&gt;x<br/>
|<br/>
|<br/>
|<br/>
y</p>

<pre><code>// define a point
let point = CGPoint(x:20, y:10)
// define a size 
let size = CGSize(width: 20, height: 10)
// define a rect using size and point
let rect_A = CGRect(origin: point, size: size)
// define a rext using x, y, width and height data
let rect_B = CGRect(x: 15, y: 10. width: 100, height: 30)
</code></pre>

<h4 id="toc_5">1. bounds</h4>

<p>the view&rsquo;s self information.自身坐标系下。</p>

<h4 id="toc_6">2. frame</h4>

<p>the place in the hierarchy.父级坐标系下。</p>

<h4 id="toc_7">3. center</h4>

<p>同frame。</p>

<h2 id="toc_8">UI hierarchy and views inheritance</h2>

<p>let parentVIew = view.parentview<br/>
let children = view.subview</p>

<ul>
<li>add</li>
<li>move</li>
<li><p>delete</p>

<pre><code>containerView.addSubView(childView)
containerView.insertSubview(childView, atindex: 2)
containerView.insertSubview(childView, aboveSubview: anotherView)
containerView.insetSubview(childView,belowSubview : anotherView)

remove all the subview of the view:

for subview in container.subview{
    subview.removeFromSuperview()
}

viewWithTag
</code></pre></li>
</ul>

<h3 id="toc_9">View and subview visibility</h3>

<p>clipToBuounds, the parent view define the subviews&#39; visibility outside its boundaries.</p>

<h3 id="toc_10">Hierarchy events</h3>

<pre><code>override func didMoveToSuperview(){
    // to do something
}

override func didAddSubview(){
    // to do something
}

override func didMoveToWindow(){
    println(&quot;I&#39;ve been attached to this window hierarchy: \(window)&quot;)
}
</code></pre>

<h2 id="toc_11">View drawing and life cycle</h2>

<ul>
<li>draw a view and creat snapshots for each displayed element.</li>
</ul>

<p>setNeedsDisplay pr setNeedsDisplayInRect can make the UIView invalidated. They will redraw during the next run loop. The latter one is better(the latter performs an optimization using only a portion of the new view content).</p>

<h1 id="toc_12">Chapter 2. UI Components overview - UIKit</h1>

<p>This chapter covers many different but related topics. Here is an overview of what you will read about in the next pages:</p>

<ul>
<li>Text elements and the keyboard</li>
<li>Buttons, selectors, and user interaction</li>
<li>View-based components</li>
<li>A UI for structured data</li>
<li>Custom components with the UIAppearance protocol</li>
</ul>

<h2 id="toc_13">Text element: UILabel,UItextfield,UItextview</h2>

<pre><code>var image = UIImageView(image:      UIImage(named:&quot;Image&quot;))
       self.textView.addSubview(image)
        let exclusionPath = UIBezierPath(rect: image.frame)
    self.textView.textContainer.exclusionPaths = [exclusionPath]
</code></pre>

<p>keyboard event and apperance</p>

<h2 id="toc_14">Button and selectors</h2>

<p>subclass of  UIControl class</p>

<p>Most of the UI elements&#39; role is to interact with the users. They convert touch event into actions or choices.</p>

<h3 id="toc_15">The Target-Action patten</h3>

<blockquote>
<p>This pattern defines how a control can request the execution of an function(action) to another object(target) in response to an event.</p>
</blockquote>

<h2 id="toc_16">View-based components</h2>

<p>subclass of UIView</p>

<ul>
<li>UIProgressView</li>
<li>UIActivityIndicatorView</li>
<li>UIImageView ,UIImage</li>
<li>UIScrollView</li>
</ul>

<h2 id="toc_17">Managing and presenting structed data</h2>

<p>table and collection views</p>

<ul>
<li>UITableView(UIScrollView)</li>
<li>UICollectionView</li>
</ul>

<h2 id="toc_18">The UIApperance protocal</h2>

<p>Example:</p>

<pre><code>let minTrack = UIImage(named: &quot;minTrack&quot;)
let maxTrack = UIImage(named: &quot;maxTrack&quot;)
let thumb = UIImage(named: &quot;thumb&quot;)

// Create resizable images
let resizableMinTrack = 
minTrack?.resizableImageWithCapInsets(
UIEdgeInsets(top: 0, left: 5, bottom: 0, right: 5))

let resizableMaxTrack = 
maxTrack?.resizableImageWithCapInsets(
UIEdgeInsets(top: 0, left: 5, bottom: 0, right: 5))

// Configure the styles!
UISlider.appearance().setMaximumTrackImage(
resizableMaxTrack, forState: UIControlState.Normal)

UISlider.appearance().setMinimumTrackImage(
resizableMinTrack, forState: UIControlState.Normal)

UISlider.appearance().setThumbImage(
thumb, forState: UIControlState.Normal)
</code></pre>

<h1 id="toc_19">Chapter 3. Interface Builder, XIB, and storyboard</h1>

<h2 id="toc_20">working with the XIB files</h2>

<h2 id="toc_21">Managing user interface with storyboard</h2>

<h2 id="toc_22">connecting user interface with your code</h2>

<p>可以先写代码再拖动选择。</p>

<pre><code> @IBAction func signIn(sender:UIButton){
 }

 var storyboard = UIStoryboard(name: &quot;Main&quot;, bundle: nil)

var storyboard = UIStoryboard(name: &quot;Main&quot;, bundle: nil)
</code></pre>

<h2 id="toc_23">implementing navigateion with storyboard and segues</h2>

<pre><code>override func prepareForSegue(segue: UIStoryboardSegue, 
                         sender: AnyObject?) {
        if segue.identifier == &quot;userDetails&quot;{
        let detailsVC = segue.destinationViewController as! 
                      detailsViewController
            detailsVC.firstname = user.firstname
            detailsVC.lastname = user.lastname
        }
}

@IBAction func &lt;function name&gt;(segue:UIStoryboardSegue){}
</code></pre>

<h1 id="toc_24">Auto Layout</h1>

<blockquote>
<p>The main rule we should keep in mind is that if you want to specify the frame of a view with Auto Layout, you need to give it enough information for both the X/Y position and width/height size.</p>
</blockquote>

<hr/>

<h1 id="toc_25">UI Level</h1>

<ol>
<li>Layout

<ul>
<li>stack view-&gt;behaviors </li>
<li>layout margins</li>
</ul></li>
<li>Apperance
basicline</li>
</ol>

<h2 id="toc_26">Xcode tips:</h2>

<ol>
<li>Shift + right clik / control + left click</li>
<li>file:option+shift</li>
</ol>

<h2 id="toc_27">Build time</h2>

<p>design time-&gt;xml<br/>
build time-&gt;nib</p>

<h2 id="toc_28">Compiling storyboard</h2>

<h2 id="toc_29">loding storyboard at run time</h2>

<ol>
<li>Performance: Nib file loaded on demand.</li>
<li>Reuse: Nib files enable reuse.</li>
<li>Life cycle.</li>
</ol>

<h2 id="toc_30">Run time</h2>

<p>Connection, API, </p>

<h1 id="toc_31">Design</h1>

<ol>
<li>Bad App Icons
Beautiful+Instandly Recongnizable</li>
<li>Focus on a unique shape<br/></li>
<li>Carefully select colors</li>
<li>Avoid using a photo</li>
<li>Avoid a lot of text</li>
<li>Be creative</li>
<li>Case study</li>
</ol>

<h1 id="toc_32">Cocoa Touch best practise</h1>

<h2 id="toc_33">put on the background.</h2>

<h1 id="toc_34">Creating Custom iOS User Interface</h1>

<p>Ask some questions:<br/>
- Where will this be userd?</p>

<p>UIApperance</p>

<ol>
<li>Spring Animation</li>
<li></li>
</ol>

<hr/>

<h1 id="toc_35">问题：如何自定义控件？</h1>

<p>-Object<br/>
&ndash;UIResponder<br/>
&mdash;UIView<br/>
&mdash;-UIControl</p>

<ul>
<li>控件的机制是什么？</li>
<li>如何获取用户的操作？</li>
<li>如何判断操作的度量？</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[小王子]]></title>
    <link href="azureyu.com/book/14602161818056.html"/>
    <updated>2016-04-09T23:36:21+08:00</updated>
    <id>azureyu.com/book/14602161818056.html</id>
    <content type="html"><![CDATA[
<p><img src="http://7xle3b.com1.z0.glb.clouddn.com/little2.jpg" alt=""/></p>

<blockquote>
<p>&ldquo;And now here is my secret, a very simple secret: It is only with the heart that one can see rightly; what is essential is invisible to the eye.&rdquo;<br/>
——《Little Prience》</p>
</blockquote>

<p>又读完一遍《Little Prience》，简单的情节，简单的故事。小王子一路的路途，都在不停的问问题，直到到了地球上狐狸给它他答案。</p>

<p>小王子有一个小小的星球，三座火山，其中一个没人知道在哪，他每天整理星球，去除杂草。他遇见了一朵不会一天内就凋谢的玫瑰，玫瑰希望自己以最好的姿态开放，他让小王子给它浇新鲜的水，让小王子给它除去视野内的杂草，让小王子晚上给它套上保护膜。玫瑰有时候让小王子不开心，小王子不开心的时候就看日落，星球很小，转个身就能看一个接一个的日落。小王子在想自己为什么要听玫瑰的呢？</p>

<!--more-->

<p>后来小王子，离开星球去旅行了，玫瑰让他走，不用担心她了，她不需要浇水、不需要除去杂草、不需要隔离夜晚的冷风。只是，玫瑰悄悄的落下了泪。<br/>
    小王子去了很多星球，开始遇见对一切下命令的国王。但是国王的星球很小，只有他一个人，小王子问他，你对什么下命令呢？国王说，整个世界，所有的星星都归他管，他只下合理的命令。可是高大威武的国王道理又能对什么下命令呢？大人们都喜欢下命令，你做这个，你不能做那个，好像一切都是在他们的命令之下，而其实他们什么都没有。（权力）</p>

<p>另一个星球住着自大的人，带着滑稽的帽子，让小王子为他鼓掌，他就行摘帽礼。他听不进除了赞美外的任何话。他认为只有一种人，就是对他崇拜的人。真实世界中的人，也有自私自傲的，就像带滑稽帽子的他。（名声，地位）</p>

<p>后来遇见一直算数的商人，小王子问商人在数什么，商人说是一种金光闪闪的东西，是天上的星星。小王子问，国王说星星都是他的，为什么又是你的？商人说，我们的拥有不一样。因为没有人在我之前想这些星星，所以我是第一个，这些星星就是我的。拥有星星用来做什么？商人说拥有星星用来为以后有更多的星星。（金钱）</p>

<p>遇见嗜酒的人？小王子问他，你为什么一直喝酒，他说因为自己羞愧。小王子又问他，那你羞愧什么？他说他羞愧他一直喝酒。这不是很好笑吗？困在自己的循环里，可是生活中又有多少人这样呢？（消极，懊悔，虚度）</p>

<p>遇见点灯的人，不停的点灯，代表一天的开始，熄灯代表一天的结束。这个星球最小。小王子一开始觉得他至少在做有用的事。点灯的人不停的交织着说早上好，晚上好。他说自己很想睡觉，但是要维持一切的秩序。什么是秩序？小王子问他。他要一直维持的秩序。小王子说，可是你的星球那么小，你可以灯一直点着，走近就是白天，远离就是夜晚。点灯人说不行，他很想睡觉，很想休息但是要维持秩序。（工作狂）</p>

<p>然后遇见写书的地理学者，小王子问学者，他的心情有些什么，学者说，他不是探索者，只需要坐在这写和思考地理。学者让小王子介绍他的星球，小王子说了火山，说的玫瑰。学者说玫瑰不能记录在书中，因为她是短暂的，学者们只记录那些很难改变的，长久的东西。小王子不能理解，对自己最重要的玫瑰是短暂的，所以不能记录。现实中，学者们思考什么是永恒的真理。却没有真正去看世界，却没有去感受世界。什么是短暂？什么是永久呢？不会改变的火山和你心爱的玫瑰，哪一个更重要呢？（知识）</p>

<p>最后小王子来到了地球，开始没有找到人类，遇见了蛇，之后又到了满是玫瑰的花园，小王子伤心极了，他本以为他的玫瑰是全宇宙独一无二的。狐狸来到了小王子的视野。小王子想要朋友，狐狸说只要你tame me，我们就是朋友。小王子问，什么是tame？狐狸说，我们有一段距离然后，明天约点四点见，那我在三点的时候就会很开心，然后我们会每天一点一点的靠近，在一起不说话，因为语言会带来误会。狐狸还告诉了小王子一个秘密，为什么他的玫瑰是独一无二的，因为他们彼此tame。因为你为他付出了时间和精力，你为他用心。这一切是因为爱，才让你的玫瑰独特，是因为爱，你们才拥有彼此，哪怕不再见面，但那份感觉拥有都还在，唯一属于你的感觉。只有心灵才能正确的看见，那些重要的东西是双眼看不见的。小王子也明白了。（爱）</p>

<p>小王子遇见火车轨道装换员，他说人们都在疲惫的坐车，只有小孩子很兴奋开心。人们忙碌的前行，却不知道自己真正想要寻找什么，小孩不同，小孩可能会tame a bell，如果大人拿走bell他就会很不开心的哭泣。我们是应该忙忙碌碌的不知为何的赶向远方，还是应该想小孩一样，对当下用心，去爱去付出真挚的情感呢？</p>

<p>一起经历一些事情后，小王子最后也离开了“我”，离开了地球，但他留下了笑声，从此漫天星星因为有他笑声的存在，成为了我的唯一。每个人的唯一都是不同的，在于是你的心和什么彼此驯服（tame）。 眼睛是蒙蔽的，一个人必须用心去看见。</p>

<p><img src="http://7xle3b.com1.z0.glb.clouddn.com/little.jpg" alt=""/></p>

<hr/>

<blockquote>
<p>摘抄：<br/>
小王子 (插图版) ([法] 圣德克旭贝里)<br/>
2014年12月9日星期二 下午 4:06~6:39</p>

<ol>
<li>But in herself alone she is more important than all the hundreds of you other roses: because it is she that I have watered; because it is she that I have put under the glass globe; because it is she that I have sheltered behind the screen; because it is for her that I have killed the caterpillars (except the two or three that we saved to become butterflies); because it is she that I have listened to, when she grumbled, or boasted, or even sometimes when she said nothing. Because she is my rose.</li>
<li>When you tell them that you have made a new friend, they never ask you any questions about essential matters. </li>
<li>&ldquo;I know a planet where there is a certain red-faced gentleman. He has never smelled a flower. He has never looked at a star. He has never loved any one. He has never done anything in his life but add up figures. And all day he says over and over, just like you: &lsquo;I am busy with matters of consequence!&rsquo; And that makes him swell up with pride. But he is not a man&ndash; he is a mushroom!&rdquo;</li>
<li>&ldquo;I myself own a flower,&rdquo; he continued his conversation with the businessman, &ldquo;which I water every day. I own three volcanoes, which I clean out every week (for I also clean out the one that is extinct; one never knows). It is of some use to my volcanoes, and it is of some use to my flower, that I own them. But you are of no use to the stars&hellip;&rdquo;</li>
<li>For it is possible for a man to be faithful and lazy at the same time.</li>
<li>It is not the geographer who goes out to count the towns, the rivers, the mountains, the seas, the oceans, and the deserts. The geographer is much too important to go loafing about</li>
<li>But there is no shop anywhere where one can buy friendship, and so men have no friends any more. If you want a friend, tame me&hellip;&ldquo;</li>
<li>&quot;First you will sit down at a little distance from me&ndash; like that&ndash; in the grass. I shall look at you out of the corner of my eye, and you will say nothing. Words are the source of misunderstandings. But yo u will sit a little closer to me, every day&hellip;&rdquo;</li>
<li>&ldquo;And now here is my secret, a very simple secret: It is only with the heart that one can see rightly; what is essential is invisible to the eye.&rdquo;</li>
<li>&ldquo;They waste their time over a rag doll and it becomes very important to them; and if anybody takes it away from them, they cry&hellip;&rdquo;</li>
<li>&ldquo;The house, the stars, the desert&ndash; what gives them their beauty is something that is invisible!&rdquo;</li>
<li>&ldquo;Men,&rdquo; said the little prince, &ldquo;set out on their way in express trains, but they do not know what they are looking for. Then they rush about, and get excited, and turn round and round&hellip;&rdquo;</li>
<li>&ldquo;But the eyes are blind. One must look with the heart&hellip;&rdquo;</li>
</ol>
</blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Images]]></title>
    <link href="azureyu.com/book/14602167510756.html"/>
    <updated>2016-04-09T23:45:51+08:00</updated>
    <id>azureyu.com/book/14602167510756.html</id>
    <content type="html"><![CDATA[
<p>32位RGBA模式会将一个颜色值存储在32位，或者4个字节中。每一个字节存储一个部分或者一个颜色通道。这4个部分分别是：</p>

<ul>
<li>R代表红色</li>
<li>G代表绿色</li>
<li>B代表蓝色</li>
<li>A代表透明度</li>
</ul>

<p>由于使用8位表示每一种颜色值，那么使用32位RGBA模式实际上可以创建出不透明的颜色的总数是256256256种，已经接近17亿种。惊叹，那是好多好多好多的颜色！</p>

<p>一个图形就是像素的集体，并且每一个像素只能表示一种颜色。</p>

<p>UIImage和UIView使用的是左上原点坐标，Core Image和Core Graphics使用的是左下原点坐标。</p>

<h2 id="toc_0">图片处理</h2>

<h3 id="toc_1">什么是图像？</h3>

<p>图像由像素组成，每一个像素代表一种颜色。<br/>
通常用数组存储图像。</p>

<h3 id="toc_2">如何用字节存储图像？</h3>

<p>32位RGBA模式会将一个颜色值存储在32位，或者四字节中。1- 4byte </p>

<h2 id="toc_3">Core Graphics</h2>

<p>图像上下文Context：不就是画画的画布，为什么如此奇怪的名字-。-</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Picture This]]></title>
    <link href="azureyu.com/book/14602161818136.html"/>
    <updated>2016-04-09T23:36:21+08:00</updated>
    <id>azureyu.com/book/14602161818136.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">Principles</h2>

<ul>
<li>Gravity

<ul>
<li>Content</li>
<li>Structure

<ul>
<li>Higher: happier,freer,spiritual</li>
<li>Lower:    gloomer,grounded</li>
</ul></li>
</ul></li>
<li></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The google resume]]></title>
    <link href="azureyu.com/book/14602161818198.html"/>
    <updated>2016-04-09T23:36:21+08:00</updated>
    <id>azureyu.com/book/14602161818198.html</id>
    <content type="html"><![CDATA[
<p>11-29</p>

<ol>
<li>What should I do to work in a big company?</li>
<li>Which company should I choose?</li>
<li>How to write a resume? Or what kind of things should I do to paper?</li>
</ol>

<p>Personal experience.</p>

<p>Project -&gt; internship -&gt; relationship</p>

<h2 id="toc_0">Design your career path</h2>

<ol>
<li>Perks</li>
<li>Moving Up, you can move up through your personal contributions. </li>
<li>Culture differance: Amazon,Apple(screct),micrsoft(windows,search,web),google(nerdy)</li>
<li><p>Big or Little</p></li>
<li><p><strong>Career Path</strong></p></li>
<li><p>What do you need? money? respect? work/life balance? Personal achievement. Wisdom, love, fame, money. </p></li>
<li><p>How do you enjoy working? </p>

<ul>
<li>independent work is great, teamwork is ok. It depends on who I am working with.</li>
<li>creating, abviously. </li>
<li>if there are something that I really want to do, then I want to lead. If there are something someone is working on and I really love to do then I will join.</li>
<li>What are you good at? Reading、thinking、writing. Science is ok. Creativity is emm I&rsquo;d love to try. How do I work with people? I really don&rsquo;t think this deeply. </li>
<li>Analysis your sucess and failures. Well, do I have any particular success？ It seems thst I do not have any big sucess or failures in my current life. Have I done any project? Yes, it&rsquo;s sucessed. Math Model is failure. I want to lead only if the person with me really want to do that. Only if they have the moviation. Only if I really want to do that. </li>
</ul></li>
<li><p><strong>An overview.</strong> Where would you fit at our company? And would you do a good job?</p>

<ul>
<li>develop a track record of achievement. Maybe I should start to fill my resume now. </li>
<li>write and speak. well, I am working on this thing all the time. But I know that most people in real life foucs on clean and perfessional. I also like to write things more nature(literature).</li>
<li>emphasis depth over breadth. I do not agree on this point with the author. Breadth is important. It make a full man.</li>
<li>being a leader. Yeap, I have tasted this. </li>
<li>find a mentor. In my current life, I haven&rsquo;t find a mentor, but I do read some good books which gives me advice. <code>I need one in really life, how to do that?</code></li>
<li>know the field</li>
</ul></li>
<li><p>Get project experience <code>Project, problem saving skills</code></p></li>
<li><p>GPA<br/><br/>
if you have a low GPA, you can show your ability through other activities.</p>

<blockquote>
<p>the top company seek for the top condidates——people with a track record of sucess.</p>
</blockquote></li>
<li><p>Getting to know peofessors. <br/>
Do I need do this? I usually don&rsquo;t know how to comminicate with a teacher. research, help, teching assistant, lunch,</p></li>
<li><p>Work Experience</p>

<ul>
<li><p>make an impact</p>

<ul>
<li>think broadly, help others.</li>
<li>be really, really good at what you do.</li>
<li>solicit feedback proactively.</li>
<li>learn about other teams.</li>
</ul></li>
<li><p>become an generalist. Understand other&rsquo;s role. not too much, I think.</p></li>
</ul></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[演讲的艺术]]></title>
    <link href="azureyu.com/book/14602161817928.html"/>
    <updated>2016-04-09T23:36:21+08:00</updated>
    <id>azureyu.com/book/14602161817928.html</id>
    <content type="html"><![CDATA[
<p>生理反应和心理反应，是可以不同的。<br/>
紧张的生理反应是，肾上腺激素增加，心跳加快，双手颤抖，手心冒汗。</p>

<p>积极对待，生理自然反应，使你更活跃。</p>

<h3 id="toc_0">试错</h3>

<p>学习的过程是不断试错的过程。学校是否也是这样的实验室？你不断试错，在其中进行“实验”？</p>

<h3 id="toc_1">准备</h3>

<ul>
<li><p>感兴趣</p>

<p>你要表达的<code>内容</code>，你的<code>紧张</code>。当你关心你要表达的内容<strong>胜过</strong>你的紧张时，你会发现，最重要的事情就是让我把话说完。    </p></li>
<li><p>积极思考</p></li>
<li><p>形象化</p></li>
<li><p>大多数紧张看不出来</p>

<ul>
<li>你认识的自己和别人认识的你</li>
</ul></li>
<li><p>别指望完美</p>

<ul>
<li>出现小问题直接忽视，照常进行</li>
</ul>

<p><em>我觉得最重要的是你表达的内容。这一点确定之后，其余的大多数问题都迎刃而解。</em>  </p></li>
<li><p>tips:</p>

<ul>
<li>放轻松，休息好</li>
<li>大腿肌肉：紧绷-放松，拳头：握紧-放松</li>
<li>深呼吸</li>
<li>用心自我介绍</li>
<li>视野交流（眉心）</li>
<li>注意力集中在交流</li>
<li>视觉辅助</li>
</ul></li>
</ul>

<h3 id="toc_2">批判性思维</h3>

<ul>
<li>严谨的思考者：批判性思维是什么？作者从逻辑和技能来解释。<em>我认为，是从不相信出发，进行思量(weight and consider)，再独立得出结论.</em></li>
<li>清晰和准确的思考</li>
</ul>

<h3 id="toc_3">过程</h3>

<ul>
<li>七要素</li>
<li><p>演讲者：</p>

<ul>
<li>准备 </li>
<li>热情</li>
<li><em>我认为,演讲者已经做的事，获得的标签，对多数人吸引力更大。你办得到，他们想做的事，自然会想听你讲。你本身有争议，引起他人好奇，自然也会听你讲。</em></li>
</ul></li>
<li><p>信息</p>

<ul>
<li>语言信息

<ul>
<li>确保想传达的信息成为实际传达出去的信息 </li>
</ul></li>
<li>非语言信息

<ul>
<li>不妨碍语言信息</li>
<li><em>论颜值的重要性，你长得好看，我也比较喜欢听你讲。</em> </li>
</ul></li>
</ul></li>
<li><p>听众</p>

<ul>
<li>听众的思维框架(知识、经验、目标、三观) frame of reference</li>
<li>以听众为中心（<em>纯粹的自我表达另当别论</em>）</li>
</ul></li>
<li><p>渠道</p></li>
<li><p>反馈</p>

<ul>
<li>无声的反馈，行为表现</li>
</ul></li>
<li><p>干扰</p>

<ul>
<li>听众注意力（<em>要放假啦，老师总会提几句闲话</em>）</li>
</ul></li>
<li><p>场合</p></li>
</ul>

<h3 id="toc_4">跨文化</h3>

<ul>
<li>文化多样性 

<ul>
<li>作者用了很多事实数据，<em>观点需要事实支撑</em></li>
<li>尊重听众民族文化，同样的尊重讲者</li>
<li>了解不同文化习俗 </li>
</ul></li>
</ul>

<p>书很好，没长还有小结和关键术语列表。观点给出事实支撑，道理，举出合适实例。</p>

<p>还有复习题和思考题。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[设计心理学]]></title>
    <link href="azureyu.com/book/14602161817875.html"/>
    <updated>2016-04-09T23:36:21+08:00</updated>
    <id>azureyu.com/book/14602161817875.html</id>
    <content type="html"><![CDATA[
<h1 id="toc_0">烦恼</h1>

<blockquote>
<p>设计中的一项重要原则：<code>可视性</code>。正确的操作部位必须显而易见，而且还要向用户传达出正确的信息。</p>
</blockquote>

<p>举例说明，门、幻灯片播放。</p>

<p>糟糕的设计让用户不知所措。</p>

<blockquote>
<p>注重可视性、给用户提供正确的操作线索、让用户得到操作动作的反馈。</p>
</blockquote>

<h1 id="toc_1">日常用品心理学</h1>

<h2 id="toc_2">预设用途</h2>

<p>不同材质、形状等有在人们心里的预设用途。</p>

<blockquote>
<p>复杂的物品也许需要说明，简单的物品应该不需要。如果简单物品也需要用图解、标志和说明书来解释操作方法，这个设计就是失败的。</p>
</blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The element]]></title>
    <link href="azureyu.com/book/14602161817710.html"/>
    <updated>2016-04-09T23:36:21+08:00</updated>
    <id>azureyu.com/book/14602161817710.html</id>
    <content type="html"><![CDATA[
<h1 id="toc_0">找到你自己的天命</h1>

<p>由故事，引出当下教育的问题。</p>

<p>科目的偏重。</p>

<p>在中国这样的现象很普遍。</p>

<p>世界是急速变化的，你现在根本就无法预测到10年之后的样子。<br/>
技术变革，人口增长。</p>

<p>为了工资而工资，当世界变化了，你又能做什么？要做什么？</p>

<p>所谓禀赋，就是个人资质和个人爱好相会之处。</p>

<p>天命：你此生真正想做的事情。</p>

<ol>
<li><p>因素：天赋和爱好</p>

<pre><code>天赋：与生俱来对某种事的本能。拥有某种天赋的人对于这种事情究竟是什么、如何运作以及如何做好有一种超乎寻常的直觉和领悟能力。
爱好：深深的喜爱
</code></pre></li>
<li><p>条件：态度和机会<br/>
    态度：我们对自身以及所处环境的一种个人判断或看法——看问题的角度，自身定位以及感性意见。<br/>
    机会，在实际生活中，在不同的领域，积极寻找天赋。</p></li>
</ol>

<h1 id="toc_1">别把一切视为理所当然</h1>

<h2 id="toc_2">提出质疑：自身能力以及别人的能力，真的那么简单吗？</h2>

<p>常识，例子，5官，之外还有4种，痛觉，温觉，前倾平衡感（平衡感+加速感），肌肉运动知觉（本体感受）</p>

<h2 id="toc_3">智力是什么？数学能力，语言文字运用能力？</h2>

<p>看看历史本源，17，18世纪启蒙运动。</p>

<p>逻辑，总会有一个起始的点，被认为是理所当然的点。</p>

<p>推理和证据成为基石。</p>

<p>智力是不变的吗？不是。IQ测试，只能反映某一方面的能力。</p>

<p>标准化考试意味着什么？</p>

<p>你有多聪明？答案是，这个问题本身就是错的。</p>

<h2 id="toc_4">你拥有哪种智力？</h2>

<p>天赋，热爱和实践</p>

<p>智力是多样的，想一想我们多样的灿烂文明。<br/>
1. 智力的多样性<br/>
2. 它有极大的活力<br/>
3. 它是绝对独特的<br/>
发现自身的天命，就是让你尝试以各种方式去经历这个世界，去发现你真正的长处在哪里。</p>

<h1 id="toc_5">用创造力激发生命奇迹</h1>

<p>每个人都有创造力，每个领域都需要创造力。</p>

<p>创造力和智力之间的紧密关系。</p>

<h2 id="toc_6">想象力创造一切</h2>

<p>作者认为想象力是思考的能力吗？</p>

<h2 id="toc_7">大小真的重要吗？</h2>

<h2 id="toc_8">创造力，想象力的实践应用。</h2>

<p>产生有价值的想法的过程。。好拗口</p>

<p>运用某种媒介，去创作。</p>

<p>找到一种能激起自身想象力的媒介（比如，文字，数学，绘画，音乐），一种你乐于与其玩耍并致力于其中的媒介。</p>

<p>不同的媒介有不同的思考方式。</p>

<p>创造性：在不同事物之间形成新的联系。</p>

<p>创造力，运用不同的媒介，不同的思考方式，实践你的想象。</p>

<h2 id="toc_9">与时光共舞，忘我的境界</h2>

<p>做不同的事，寻找灵感。</p>

<p>感觉时间过得很快，自我真实和自由。</p>

<p>心流体验。</p>

<p>看书，看喜欢的书，比如三毛的书。<br/>
集中精力做某件事，比如完成IBM个人赛，练习某一首吉他曲。</p>

<p>自己的思维方式</p>

<h2 id="toc_10">在志趣相投的人身上找到自己</h2>

<p>进入适合你的圈子</p>

<h2 id="toc_11">突破限制</h2>

<h2 id="toc_12">人生导师</h2>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WordCollage]]></title>
    <link href="azureyu.com/book/14602167512031.html"/>
    <updated>2016-04-09T23:45:51+08:00</updated>
    <id>azureyu.com/book/14602167512031.html</id>
    <content type="html"><![CDATA[
<p>Searching into iTunes Store, I find some wonderful courses about building apps with Swift. <br/>
&lt;!&ndash;more&ndash;&gt;<br/>
Here is the topic:<br/>
<img src="http://upload-images.jianshu.io/upload_images/48181-28bebe6d862f3b60.png" alt="course.png"/><br/>
So I choose one of it to become today&rsquo;s course.<br/>
First, I see the whole picture of this course and its course plan.<br/>
Then, I get similar with the Xcode. Learning its main board and keyboard Shortcuts. The <a href="http://swifteducation.github.io/teaching_app_development_with_swift/wordcollage.html">Course&rsquo;s Materials</a> provide a clear picture:</p>

<p><img src="http://upload-images.jianshu.io/upload_images/48181-33bc6ab89f3a257a.png" alt="XcodeShortcuts.png"/></p>

<p>How about others you have learned?</p>

<p>When I learn Java, there is no mention of AutoLayout. At first, we learn the java language and then learn its GUI. Using java code to design is much more difficult for the beginners. Actually many of my classmates are use the old way to design the UI. I wonder why not use WindowsBuilder which is a visible tool to design User Interface? On the other hand, when I use MFC to build a manage system, we also use the visible tool. I guess the desktop application and the mobile application is different in this way. How about the web design? It will change its layout and size too. Medium is the label for it.</p>

<p>Why we use the AutoLayout ?<br/>
1. For varies of devices<br/>
2. <a href="https://developer.apple.com/library/prerelease/ios/documentation/WindowsViews/Conceptual/AdoptingMultitaskingOniPad/index.html#//apple_ref/doc/uid/TP40015145-CH3-SW1">Adopting Multitasking Enhancements on iPad</a></p>

<hr/>

<h1 id="toc_0">project  1 —— WordCollage</h1>

<p>完成本项目能够了解基本的Xcode(IDE)使用方式，以及自动布局(Atuo Layout)的使用，如何添加限制(Constraints)，改变控件颜色等。</p>

<h1 id="toc_1">Lesson 1~2</h1>

<p>Finally:<br/>
<img src="http://upload-images.jianshu.io/upload_images/48181-62802bfac58326f0.png" alt="FirstProject.png"/></p>

<h2 id="toc_2">vocabulary: (纯个人翻译)</h2>

<blockquote>
<ol>
<li>Interface Builder: 界面编辑器</li>
<li>storyboard: 概要面板</li>
<li>canvas: where you draw your UI</li>
<li>user interface: 用户界面</li>
<li>iOS Simulator：iOS 模拟器(模拟在设备上显示的效果)</li>
<li>adaptive user interface: 可调节的用户界面</li>
<li>Object Library: 对象库</li>
<li>Label: 标签 (文字提示和显示)</li>
<li>Attributes Inspector: 属性调节</li>
<li>Document Outline: 文档大纲</li>
<li>Assistant Editor: 辅助编辑器</li>
<li>auto layout: 自动布局</li>
<li>constraint: 限制、约束</li>
<li>size class:大小类</li>
<li>orientation:方向（旋转改变方向）</li>
</ol>
</blockquote>

<p>Interface Builder provides us with a square canvas</p>

<h2 id="toc_3">Opening</h2>

<p>StoryBoard is square board, while the real devise isn&rsquo;t.</p>

<h3 id="toc_4">1.3 How it works? How could it build once and can adapt to different circumstances?</h3>

<p>The Keynote shows the main idea.Relative Positioning and Sizing.<strong>We use constraints to define how things should be positioned relatively.</strong> I think, in some way, it looks like Layout of CSS.</p>

<p><img src="http://upload-images.jianshu.io/upload_images/48181-1f60c5c741b2f59d.png" alt="FstP1.png"/><br/>
All the Materials is <code>Simple、Clear、Understandable</code>.<br/>
others:<br/>
- Blue: all right<br/>
- Orange: I need more constraints.<br/>
- Pin <br/>
- Align control<br/>
- using SortCuts to fix issue: option command = <br/>
 rotate: command -&gt; </p>

<p><img src="http://upload-images.jianshu.io/upload_images/48181-f6f26b0150b63068.png" alt="FstP2.png"/></p>

<hr/>

<h1 id="toc_5"><a href="http://swifteducation.github.io/teaching_app_development_with_swift/wordcollage.html">Lesson 3</a></h1>

<h2 id="toc_6">Vocabulary</h2>

<blockquote>
<ol>
<li>IDE: 集成开发环境，在此指Xcode</li>
<li>Xcode Documentation and API Reference：Xcode文档和API参考</li>
<li>connection well：</li>
<li>Model-View-Controller：模型-视图-控制器，简称MVC，是一种设计模式</li>
<li>@IBAction：</li>
<li>UIColor：</li>
</ol>
</blockquote>

<h2 id="toc_7">Opening</h2>

<blockquote>
<p>How do you create a button that changes the background color?</p>
</blockquote>

<p>如何添加一个可以改变背景颜色的按钮？</p>

<h2 id="toc_8">Agenda</h2>

<ol>
<li>Add the Button and change its position and content.</li>
<li>Add constraint to make it near the Bottom and horizontal center.
I make gif pictures: )
<img src="http://upload-images.jianshu.io/upload_images/48181-745f1653ae84cf7e.gif?imageView2/2/w/1240" alt="BackgroundColor.gif"/>
<img src="http://upload-images.jianshu.io/upload_images/48181-0b6cc5d6f29ab344.gif?imageView2/2/w/1240" alt="irbZsEtSwq.gif"/></li>
<li>Make Connection
<img src="http://upload-images.jianshu.io/upload_images/48181-54a8f7824be90b84.gif?imageView2/2/w/1240" alt="P1L3.gif"/></li>
<li>Then Add this：
    @IBAction func changeBackgroundColor(sender: UIButton) {
        view.backgroundColor = UIColor.blackColor()
        }</li>
<li>Test</li>
</ol>

<p><img src="http://upload-images.jianshu.io/upload_images/48181-173e92d1e21058d8.gif?imageView2/2/w/1240" alt="2QKw2OAgSl.gif"/></p>

<h2 id="toc_9">Keynote:</h2>

<blockquote>
<p>Ingredients for iOS apps:</p>
</blockquote>

<p><img src="http://upload-images.jianshu.io/upload_images/48181-0a314243abb1738b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="P1L3-1.png"/><br/>
<img src="http://upload-images.jianshu.io/upload_images/48181-a0bd44056099dc4b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="P1L3-2.png"/></p>

<blockquote>
<p>**Write the best code: code that is robust, expressive, readable and maintainable over time. **</p>
</blockquote>

<hr/>

<h1 id="toc_10">Lesson 4</h1>

<p>Add two more button</p>

<pre><code> @IBAction func changeBackgroundColorToWhite(sender: UIButton) {
    view.backgroundColor = UIColor.whiteColor()
}

@IBAction func changeBackgroundColorToMagenta(sender: UIButton) {
    view.backgroundColor = UIColor.magentaColor()
}
</code></pre>

<p>Final:</p>

<p><img src="http://upload-images.jianshu.io/upload_images/48181-e3388839c2e33639.gif?imageView2/2/w/1240" alt="final.gif"/></p>

]]></content>
  </entry>
  
</feed>
